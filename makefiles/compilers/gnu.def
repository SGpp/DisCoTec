# definitions for the GNU compiler family

MPFC ?= mpif90
#MPFC = mpigfortran64
MPCC ?= mpicc
MPCXX ?= mpic++
FC ?= gfortran
CC ?= gcc
CXX ?= g++

ifeq ($(USE_PERFLIB),scalasca)
 MPFC := scalasca -instrument -user $(MPFC)
 MPCC := scalasca -instrument -user $(MPCC)
endif
ifeq ($(USE_PERFLIB),ompp)
# the preprocessor must not write #line directives
# and also the quotes in the SVN statement is switched off
 MPFC := kinst-ompp $(MPFC)
 FC := kinst-ompp $(FC)
endif

SET_F2003_STANDARD = -std=f2003 -fall-intrinsics
PREPROC_FLAG = -cpp

DEBUG_TRACEBACK = -fbacktrace
DEBUG_NOUNUSED = -Wno-unused
DEBUG_WARN = -Wall -Warray-temporaries 
DEBUG_RUNTIME_CHECK =  -ffpe-trap=invalid,zero,overflow,underflow -fcheck=all
DEBUG_TRACEBACK = -fbacktrace
DEBUG_FFLAGS = $(DEBUG_TRACEBACK) $(DEBUG_RUNTIME_CHECK) $(DEBUG_WARN)
DEBUG_CFLAGS = $(DEBUG_FFLAGS)

ifeq ($(DEBUG),noopt)
 DEBUG_FFLAGS += -fbacktrace -O0
endif

ifeq ($(CHIP),Core2)
 CHIP_OPT = -march=core2
endif
ifeq ($(CHIP),Magny-Cours)
 CHIP_OPT = -march=barcelona
endif
ifeq ($(CHIP),Nehalem)
 CHIP_OPT = -march=corei7
endif
ifeq ($(CHIP),SandyBridge)
 CHIP_OPT = -march=corei7-avx
endif

OPTLEVEL ?= 3
OPT_FFLAGS = -O$(OPTLEVEL) $(CHIP_OPT)
PRODRUN_FFLAGS = $(OPT_FFLAGS)
OPENMP_FFLAGS = -fopenmp

SYMBOL_FFLAGS += -g 
SYMBOL_CFLAGS += -g

REPORT_FFLAGS = 

DOUBLE_PRECISION_FFLAGS = -fdefault-real-8 -fdefault-double-8
MODDIR_FFLAGS = -J$(OBJDIR)


ifeq ($(MKLVERSION),10.3)
# Intel MKL 10.3 sequential
	MKL_SCALAPACK_LINKLINE = $(MKLROOT)/lib/intel64/libmkl_scalapack_lp64.a \
	 -Wl,--start-group  $(MKLROOT)/lib/intel64/libmkl_gf_lp64.a \
	$(MKLROOT)/lib/intel64/libmkl_sequential.a \
	$(MKLROOT)/lib/intel64/libmkl_core.a \
	$(MKLROOT)/lib/intel64/libmkl_blacs_intelmpi_lp64.a \
	-Wl,--end-group -lpthread -lm
	MKL_FFLAGS = -m64 -I$(MKLROOT)/include

	MKL_BLAS_LINKLINE = -Wl,--start-group  $(MKLROOT)/lib/intel64/libmkl_gf_lp64.a \
	$(MKLROOT)/lib/intel64/libmkl_sequential.a \
	$(MKLROOT)/lib/intel64/libmkl_core.a \
	-Wl,--end-group -lpthread -lm
else
# Intel MKL 10.1 sequential
	MKL_SCALAPACK_LINKLINE = $(MKLROOT)/lib/em64t/libmkl_scalapack_lp64.a $(MKLROOT)/lib/em64t/libmkl_solver_lp64_sequential.a -Wl,--start-group  $(MKLROOT)/lib/em64t/libmkl_gf_lp64.a $(MKLROOT)/lib/em64t/libmkl_sequential.a $(MKLROOT)/lib/em64t/libmkl_core.a $(MKLROOT)/lib/em64t/libmkl_blacs_intelmpi_lp64.a -Wl,--end-group -lpthread -lm

	MKL_FFLAGS = -m64 -I$(MKLROOT)/include

	MKL_BLAS_LINKLINE = $(MKLROOT)/lib/em64t/libmkl_solver_lp64_sequential.a -Wl,--start-group  $(MKLROOT)/lib/em64t/libmkl_gf_lp64.a $(MKLROOT)/lib/em64t/libmkl_sequential.a $(MKLROOT)/lib/em64t/libmkl_core.a -Wl,--end-group -lpthread -lm
endif

F2003_MISSING=-DF2003_NO_OPEN_CONVERT

