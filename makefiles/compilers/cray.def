# definitions for the Cray compiler family

MPFC = ftn
MPCC = cc
cmd=$(shell basename $(shell which $(MPFC)))
ifneq ($(cmd),$(MPFC))
MPFC = crayftn
MPCC = craycc
endif

FC = ftn
CC = cc

MPI_MODDIR= 
MPI_LIBS = -lmpich

ifeq ($(USE_PERFLIB),scalasca)
 MPFC := scalasca -instrument -user $(MPFC)
 MPCC := scalasca -instrument -user $(MPCC)
#	FFLAGS += -fpp -Wp,-P
endif
ifeq ($(USE_PERFLIB),ompp)
# the preprocessor must not write #line directives
# and also the quotes in the SVN statement is switched off
 MPFC := kinst-ompp $(MPFC)
 FC := kinst-ompp $(FC)
#	FFLAGS += -fpp -Wp,-P
endif

SET_F2003_STANDARD =
PREPROC_FLAG = -e Z

DEBUG_TRACEBACK =
DEBUG_FFLAGS = $(DEBUG_TRACEBACK) -e D
DEBUG_CFLAGS = 

ifeq ($(CHIP),Core2)
 CHIP_OPT = -tp core2
endif
ifeq ($(CHIP),Nehalem)
 CHIP_OPT = -tp nehalem
endif
ifeq ($(CHIP),SandyBridge)
 CHIP_OPT = -tp sandybridge
endif

OPTLEVEL ?= 3
OPT_FFLAGS = -O$(OPTLEVEL) $(CHIP_OPT)
PRODRUN_FFLAGS = $(OPT_FFLAGS)
OPENMP_FFLAGS = -homp
ifneq ($(OPENMP),yes)
 FFLAGS += -hnoomp
endif

SYMBOL_FFLAGS += -g 
SYMBOL_CFLAGS += -g

REPORT_FFLAGS = 

DOUBLE_PRECISION_FFLAGS = -s real64
DOUBLE_PRECISION_PREPREC = -D'erf=derf'

MODDIR_FFLAGS = # -J$(OBJDIR)


ifeq ($(MKLVERSION),10.3)
# Intel MKL 10.3 sequential
 MKL_SCALAPACK_LINKLINE = $(MKLROOT)/lib/intel64/libmkl_scalapack_lp64.a \
	 -Wl,--start-group  $(MKLROOT)/lib/intel64/libmkl_gf_lp64.a \
	$(MKLROOT)/lib/intel64/libmkl_sequential.a \
	$(MKLROOT)/lib/intel64/libmkl_core.a \
	$(MKLROOT)/lib/intel64/libmkl_blacs_intelmpi_lp64.a \
	-Wl,--end-group -lpthread -lm
	MKL_FFLAGS = -m64 -I$(MKLROOT)/include

 MKL_BLAS_LINKLINE = -Wl,--start-group  $(MKLROOT)/lib/intel64/libmkl_gf_lp64.a \
	$(MKLROOT)/lib/intel64/libmkl_sequential.a \
	$(MKLROOT)/lib/intel64/libmkl_core.a \
	-Wl,--end-group -lpthread -lm
else
# Intel MKL 10.1 sequential
 MKL_SCALAPACK_LINKLINE = $(MKLROOT)/lib/em64t/libmkl_scalapack_lp64.a $(MKLROOT)/lib/em64t/libmkl_solver_lp64_sequential.a -Wl,--start-group  $(MKLROOT)/lib/em64t/libmkl_gf_lp64.a $(MKLROOT)/lib/em64t/libmkl_sequential.a $(MKLROOT)/lib/em64t/libmkl_core.a $(MKLROOT)/lib/em64t/libmkl_blacs_intelmpi_lp64.a -Wl,--end-group -lpthread -lm

 MKL_FFLAGS = -m64 -I$(MKLROOT)/include

 MKL_BLAS_LINKLINE = $(MKLROOT)/lib/em64t/libmkl_solver_lp64_sequential.a -Wl,--start-group  $(MKLROOT)/lib/em64t/libmkl_gf_lp64.a $(MKLROOT)/lib/em64t/libmkl_sequential.a $(MKLROOT)/lib/em64t/libmkl_core.a -Wl,--end-group -lpthread -lm
endif

F2003_MISSING=-DF2003_NO_OPEN_CONVERT

LDFLAGS += 
